// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: celestia/blob/v1/tx.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgPayForBlobs pays for the inclusion of a blob in the block.
type MsgPayForBlobs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// signer is the bech32 encoded signer address. See
	// https://en.bitcoin.it/wiki/Bech32.
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	// namespaces is a list of namespaces that the blobs are associated with. A
	// namespace is a byte slice of length 29 where the first byte is the
	// namespaceVersion and the subsequent 28 bytes are the namespaceId.
	Namespaces [][]byte `protobuf:"bytes,2,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	// blob_sizes is a list of blob sizes (one per blob). Each size is in bytes.
	BlobSizes []uint32 `protobuf:"varint,3,rep,packed,name=blob_sizes,json=blobSizes,proto3" json:"blob_sizes,omitempty"`
	// share_commitments is a list of share commitments (one per blob).
	ShareCommitments [][]byte `protobuf:"bytes,4,rep,name=share_commitments,json=shareCommitments,proto3" json:"share_commitments,omitempty"`
	// share_versions are the versions of the share format that the blobs
	// associated with this message should use when included in a block. The
	// share_versions specified must match the share_versions used to generate the
	// share_commitment in this message.
	ShareVersions []uint32 `protobuf:"varint,8,rep,packed,name=share_versions,json=shareVersions,proto3" json:"share_versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgPayForBlobs) Reset() {
	*x = MsgPayForBlobs{}
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgPayForBlobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayForBlobs) ProtoMessage() {}

func (x *MsgPayForBlobs) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayForBlobs.ProtoReflect.Descriptor instead.
func (*MsgPayForBlobs) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgPayForBlobs) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgPayForBlobs) GetNamespaces() [][]byte {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *MsgPayForBlobs) GetBlobSizes() []uint32 {
	if x != nil {
		return x.BlobSizes
	}
	return nil
}

func (x *MsgPayForBlobs) GetShareCommitments() [][]byte {
	if x != nil {
		return x.ShareCommitments
	}
	return nil
}

func (x *MsgPayForBlobs) GetShareVersions() []uint32 {
	if x != nil {
		return x.ShareVersions
	}
	return nil
}

// MsgPayForBlobsResponse describes the response returned after the submission
// of a PayForBlobs
type MsgPayForBlobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgPayForBlobsResponse) Reset() {
	*x = MsgPayForBlobsResponse{}
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgPayForBlobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayForBlobsResponse) ProtoMessage() {}

func (x *MsgPayForBlobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayForBlobsResponse.ProtoReflect.Descriptor instead.
func (*MsgPayForBlobsResponse) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_tx_proto_rawDescGZIP(), []int{1}
}

// MsgUpdateBlobParams defines the sdk.Msg type to update the client parameters.
type MsgUpdateBlobParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the blob parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params        *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgUpdateBlobParams) Reset() {
	*x = MsgUpdateBlobParams{}
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgUpdateBlobParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateBlobParams) ProtoMessage() {}

func (x *MsgUpdateBlobParams) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateBlobParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateBlobParams) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgUpdateBlobParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateBlobParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateBlobParamsResponse defines the MsgUpdateBlobParams response type.
type MsgUpdateBlobParamsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgUpdateBlobParamsResponse) Reset() {
	*x = MsgUpdateBlobParamsResponse{}
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgUpdateBlobParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateBlobParamsResponse) ProtoMessage() {}

func (x *MsgUpdateBlobParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_tx_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateBlobParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateBlobParamsResponse) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_tx_proto_rawDescGZIP(), []int{3}
}

var File_celestia_blob_v1_tx_proto protoreflect.FileDescriptor

const file_celestia_blob_v1_tx_proto_rawDesc = "" +
	"\n" +
	"\x19celestia/blob/v1/tx.proto\x12\x10celestia.blob.v1\x1a\x1dcelestia/blob/v1/params.proto\x1a\x14gogoproto/gogo.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17cosmos/msg/v1/msg.proto\x1a\x19cosmos_proto/cosmos.proto\"\xe2\x01\n" +
	"\x0eMsgPayForBlobs\x120\n" +
	"\x06signer\x18\x01 \x01(\tB\x18าด-\x14cosmos.AddressStringR\x06signer\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x02 \x03(\fR\n" +
	"namespaces\x12\x1d\n" +
	"\n" +
	"blob_sizes\x18\x03 \x03(\rR\tblobSizes\x12+\n" +
	"\x11share_commitments\x18\x04 \x03(\fR\x10shareCommitments\x12%\n" +
	"\x0eshare_versions\x18\b \x03(\rR\rshareVersions:\v\x82\xe7\xb0*\x06signer\"\x18\n" +
	"\x16MsgPayForBlobsResponse\"{\n" +
	"\x13MsgUpdateBlobParams\x12\x1c\n" +
	"\tauthority\x18\x01 \x01(\tR\tauthority\x126\n" +
	"\x06params\x18\x02 \x01(\v2\x18.celestia.blob.v1.ParamsB\x04\xc8\xde\x1f\x00R\x06params:\x0e\x82\xe7\xb0*\tauthority\"\x1d\n" +
	"\x1bMsgUpdateBlobParamsResponse2\xf2\x01\n" +
	"\x03Msg\x12z\n" +
	"\vPayForBlobs\x12 .celestia.blob.v1.MsgPayForBlobs\x1a(.celestia.blob.v1.MsgPayForBlobsResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/blob/v1/payforblobs\x12h\n" +
	"\x10UpdateBlobParams\x12%.celestia.blob.v1.MsgUpdateBlobParams\x1a-.celestia.blob.v1.MsgUpdateBlobParamsResponse\x1a\x05\x80\xe7\xb0*\x01B2Z0github.com/celestiaorg/celestia-app/x/blob/typesb\x06proto3"

var (
	file_celestia_blob_v1_tx_proto_rawDescOnce sync.Once
	file_celestia_blob_v1_tx_proto_rawDescData []byte
)

func file_celestia_blob_v1_tx_proto_rawDescGZIP() []byte {
	file_celestia_blob_v1_tx_proto_rawDescOnce.Do(func() {
		file_celestia_blob_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_celestia_blob_v1_tx_proto_rawDesc), len(file_celestia_blob_v1_tx_proto_rawDesc)))
	})
	return file_celestia_blob_v1_tx_proto_rawDescData
}

var file_celestia_blob_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_celestia_blob_v1_tx_proto_goTypes = []any{
	(*MsgPayForBlobs)(nil),              // 0: celestia.blob.v1.MsgPayForBlobs
	(*MsgPayForBlobsResponse)(nil),      // 1: celestia.blob.v1.MsgPayForBlobsResponse
	(*MsgUpdateBlobParams)(nil),         // 2: celestia.blob.v1.MsgUpdateBlobParams
	(*MsgUpdateBlobParamsResponse)(nil), // 3: celestia.blob.v1.MsgUpdateBlobParamsResponse
	(*Params)(nil),                      // 4: celestia.blob.v1.Params
}
var file_celestia_blob_v1_tx_proto_depIdxs = []int32{
	4, // 0: celestia.blob.v1.MsgUpdateBlobParams.params:type_name -> celestia.blob.v1.Params
	0, // 1: celestia.blob.v1.Msg.PayForBlobs:input_type -> celestia.blob.v1.MsgPayForBlobs
	2, // 2: celestia.blob.v1.Msg.UpdateBlobParams:input_type -> celestia.blob.v1.MsgUpdateBlobParams
	1, // 3: celestia.blob.v1.Msg.PayForBlobs:output_type -> celestia.blob.v1.MsgPayForBlobsResponse
	3, // 4: celestia.blob.v1.Msg.UpdateBlobParams:output_type -> celestia.blob.v1.MsgUpdateBlobParamsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_celestia_blob_v1_tx_proto_init() }
func file_celestia_blob_v1_tx_proto_init() {
	if File_celestia_blob_v1_tx_proto != nil {
		return
	}
	file_celestia_blob_v1_params_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_celestia_blob_v1_tx_proto_rawDesc), len(file_celestia_blob_v1_tx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_celestia_blob_v1_tx_proto_goTypes,
		DependencyIndexes: file_celestia_blob_v1_tx_proto_depIdxs,
		MessageInfos:      file_celestia_blob_v1_tx_proto_msgTypes,
	}.Build()
	File_celestia_blob_v1_tx_proto = out.File
	file_celestia_blob_v1_tx_proto_goTypes = nil
	file_celestia_blob_v1_tx_proto_depIdxs = nil
}
