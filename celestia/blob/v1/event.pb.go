// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: celestia/blob/v1/event.proto

package types

import (
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventPayForBlobs defines an event that is emitted after a pay for blob has
// been processed.
type EventPayForBlobs struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Signer    string                 `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	BlobSizes []uint32               `protobuf:"varint,2,rep,packed,name=blob_sizes,json=blobSizes,proto3" json:"blob_sizes,omitempty"`
	// namespaces is a list of namespaces that the blobs in blob_sizes belong to.
	// A namespace has length of 29 bytes where the first byte is the
	// namespaceVersion and the subsequent 28 bytes are the namespaceID.
	Namespaces    [][]byte `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPayForBlobs) Reset() {
	*x = EventPayForBlobs{}
	mi := &file_celestia_blob_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPayForBlobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPayForBlobs) ProtoMessage() {}

func (x *EventPayForBlobs) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPayForBlobs.ProtoReflect.Descriptor instead.
func (*EventPayForBlobs) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventPayForBlobs) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *EventPayForBlobs) GetBlobSizes() []uint32 {
	if x != nil {
		return x.BlobSizes
	}
	return nil
}

func (x *EventPayForBlobs) GetNamespaces() [][]byte {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// EventUpdateBlobParams defines an event that is emitted when blob parameters are
// updated. It is triggered after a successful execution of a parameter update proposal.
type EventUpdateBlobParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signer        string                 `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Params        *Params                `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventUpdateBlobParams) Reset() {
	*x = EventUpdateBlobParams{}
	mi := &file_celestia_blob_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventUpdateBlobParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateBlobParams) ProtoMessage() {}

func (x *EventUpdateBlobParams) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_blob_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUpdateBlobParams.ProtoReflect.Descriptor instead.
func (*EventUpdateBlobParams) Descriptor() ([]byte, []int) {
	return file_celestia_blob_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventUpdateBlobParams) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *EventUpdateBlobParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_celestia_blob_v1_event_proto protoreflect.FileDescriptor

const file_celestia_blob_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x1ccelestia/blob/v1/event.proto\x12\x10celestia.blob.v1\x1a\x14gogoproto/gogo.proto\x1a\x1dcelestia/blob/v1/params.proto\"i\n" +
	"\x10EventPayForBlobs\x12\x16\n" +
	"\x06signer\x18\x01 \x01(\tR\x06signer\x12\x1d\n" +
	"\n" +
	"blob_sizes\x18\x02 \x03(\rR\tblobSizes\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x03 \x03(\fR\n" +
	"namespaces\"g\n" +
	"\x15EventUpdateBlobParams\x12\x16\n" +
	"\x06signer\x18\x01 \x01(\tR\x06signer\x126\n" +
	"\x06params\x18\x02 \x01(\v2\x18.celestia.blob.v1.ParamsB\x04\xc8\xde\x1f\x00R\x06paramsB2Z0github.com/celestiaorg/celestia-app/x/blob/typesb\x06proto3"

var (
	file_celestia_blob_v1_event_proto_rawDescOnce sync.Once
	file_celestia_blob_v1_event_proto_rawDescData []byte
)

func file_celestia_blob_v1_event_proto_rawDescGZIP() []byte {
	file_celestia_blob_v1_event_proto_rawDescOnce.Do(func() {
		file_celestia_blob_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_celestia_blob_v1_event_proto_rawDesc), len(file_celestia_blob_v1_event_proto_rawDesc)))
	})
	return file_celestia_blob_v1_event_proto_rawDescData
}

var file_celestia_blob_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_celestia_blob_v1_event_proto_goTypes = []any{
	(*EventPayForBlobs)(nil),      // 0: celestia.blob.v1.EventPayForBlobs
	(*EventUpdateBlobParams)(nil), // 1: celestia.blob.v1.EventUpdateBlobParams
	(*Params)(nil),                // 2: celestia.blob.v1.Params
}
var file_celestia_blob_v1_event_proto_depIdxs = []int32{
	2, // 0: celestia.blob.v1.EventUpdateBlobParams.params:type_name -> celestia.blob.v1.Params
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_celestia_blob_v1_event_proto_init() }
func file_celestia_blob_v1_event_proto_init() {
	if File_celestia_blob_v1_event_proto != nil {
		return
	}
	file_celestia_blob_v1_params_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_celestia_blob_v1_event_proto_rawDesc), len(file_celestia_blob_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_celestia_blob_v1_event_proto_goTypes,
		DependencyIndexes: file_celestia_blob_v1_event_proto_depIdxs,
		MessageInfos:      file_celestia_blob_v1_event_proto_msgTypes,
	}.Build()
	File_celestia_blob_v1_event_proto = out.File
	file_celestia_blob_v1_event_proto_goTypes = nil
	file_celestia_blob_v1_event_proto_depIdxs = nil
}
