// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: celestia/mint/v1/mint.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Minter represents the mint state.
type Minter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// InflationRate is the rate at which new tokens should be minted for the
	// current year. For example if InflationRate=0.1, then 10% of the total
	// supply will be minted over the course of the year.
	InflationRate string `protobuf:"bytes,1,opt,name=inflation_rate,json=inflationRate,proto3" json:"inflation_rate,omitempty"`
	// AnnualProvisions is the total number of tokens to be minted in the current
	// year due to inflation.
	AnnualProvisions string `protobuf:"bytes,2,opt,name=annual_provisions,json=annualProvisions,proto3" json:"annual_provisions,omitempty"`
	// PreviousBlockTime is the timestamp of the previous block.
	PreviousBlockTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=previous_block_time,json=previousBlockTime,proto3" json:"previous_block_time,omitempty"`
	// BondDenom is the denomination of the token that should be minted.
	BondDenom     string `protobuf:"bytes,5,opt,name=bond_denom,json=bondDenom,proto3" json:"bond_denom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Minter) Reset() {
	*x = Minter{}
	mi := &file_celestia_mint_v1_mint_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Minter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Minter) ProtoMessage() {}

func (x *Minter) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_mint_v1_mint_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Minter.ProtoReflect.Descriptor instead.
func (*Minter) Descriptor() ([]byte, []int) {
	return file_celestia_mint_v1_mint_proto_rawDescGZIP(), []int{0}
}

func (x *Minter) GetInflationRate() string {
	if x != nil {
		return x.InflationRate
	}
	return ""
}

func (x *Minter) GetAnnualProvisions() string {
	if x != nil {
		return x.AnnualProvisions
	}
	return ""
}

func (x *Minter) GetPreviousBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PreviousBlockTime
	}
	return nil
}

func (x *Minter) GetBondDenom() string {
	if x != nil {
		return x.BondDenom
	}
	return ""
}

// GenesisTime contains the timestamp of the genesis block.
type GenesisTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GenesisTime is the timestamp of the genesis block.
	GenesisTime   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisTime) Reset() {
	*x = GenesisTime{}
	mi := &file_celestia_mint_v1_mint_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisTime) ProtoMessage() {}

func (x *GenesisTime) ProtoReflect() protoreflect.Message {
	mi := &file_celestia_mint_v1_mint_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisTime.ProtoReflect.Descriptor instead.
func (*GenesisTime) Descriptor() ([]byte, []int) {
	return file_celestia_mint_v1_mint_proto_rawDescGZIP(), []int{1}
}

func (x *GenesisTime) GetGenesisTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GenesisTime
	}
	return nil
}

var File_celestia_mint_v1_mint_proto protoreflect.FileDescriptor

const file_celestia_mint_v1_mint_proto_rawDesc = "" +
	"\n" +
	"\x1bcelestia/mint/v1/mint.proto\x12\x10celestia.mint.v1\x1a\x14gogoproto/gogo.proto\x1a\x19cosmos_proto/cosmos.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb3\x02\n" +
	"\x06Minter\x12X\n" +
	"\x0einflation_rate\x18\x01 \x01(\tB1\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecҴ-\n" +
	"cosmos.DecR\rinflationRate\x12^\n" +
	"\x11annual_provisions\x18\x02 \x01(\tB1\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecҴ-\n" +
	"cosmos.DecR\x10annualProvisions\x12P\n" +
	"\x13previous_block_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01R\x11previousBlockTime\x12\x1d\n" +
	"\n" +
	"bond_denom\x18\x05 \x01(\tR\tbondDenom\"R\n" +
	"\vGenesisTime\x12C\n" +
	"\fgenesis_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01R\vgenesisTimeB2Z0github.com/celestiaorg/celestia-app/x/mint/typesb\x06proto3"

var (
	file_celestia_mint_v1_mint_proto_rawDescOnce sync.Once
	file_celestia_mint_v1_mint_proto_rawDescData []byte
)

func file_celestia_mint_v1_mint_proto_rawDescGZIP() []byte {
	file_celestia_mint_v1_mint_proto_rawDescOnce.Do(func() {
		file_celestia_mint_v1_mint_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_celestia_mint_v1_mint_proto_rawDesc), len(file_celestia_mint_v1_mint_proto_rawDesc)))
	})
	return file_celestia_mint_v1_mint_proto_rawDescData
}

var file_celestia_mint_v1_mint_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_celestia_mint_v1_mint_proto_goTypes = []any{
	(*Minter)(nil),                // 0: celestia.mint.v1.Minter
	(*GenesisTime)(nil),           // 1: celestia.mint.v1.GenesisTime
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_celestia_mint_v1_mint_proto_depIdxs = []int32{
	2, // 0: celestia.mint.v1.Minter.previous_block_time:type_name -> google.protobuf.Timestamp
	2, // 1: celestia.mint.v1.GenesisTime.genesis_time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_celestia_mint_v1_mint_proto_init() }
func file_celestia_mint_v1_mint_proto_init() {
	if File_celestia_mint_v1_mint_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_celestia_mint_v1_mint_proto_rawDesc), len(file_celestia_mint_v1_mint_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_celestia_mint_v1_mint_proto_goTypes,
		DependencyIndexes: file_celestia_mint_v1_mint_proto_depIdxs,
		MessageInfos:      file_celestia_mint_v1_mint_proto_msgTypes,
	}.Build()
	File_celestia_mint_v1_mint_proto = out.File
	file_celestia_mint_v1_mint_proto_goTypes = nil
	file_celestia_mint_v1_mint_proto_depIdxs = nil
}
